import streamlit as st
import yt_dlp
import os
import platform

# V√©rification et installation des d√©pendances manquantes
try:
    import yt_dlp
except ImportError:
    os.system('pip install yt-dlp')

# V√©rification de l'installation de ffmpeg
try:
    import ffmpeg
except ImportError:
    os.system('pip install ffmpeg')

st.title("üéµ T√©l√©chargeur YouTube en MP3")

# Zone d'entr√©e pour l'URL
url = st.text_input("Entrez l'URL de la vid√©o YouTube")

# Fonction pour t√©l√©charger l'audio YouTube
def download_youtube_audio(url):
    ydl_opts = {
        'format': 'bestaudio/best',
        'outtmpl': 'downloads/%(title)s.%(ext)s',
        'noplaylist': True,
        'quiet': False,
        'postprocessors': [],
    }
    try:
        os.makedirs("downloads", exist_ok=True)
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(url, download=True)
            file_name = ydl.prepare_filename(info_dict)
            return file_name
    except Exception as e:
        st.error(f"Erreur lors du t√©l√©chargement : {e}")
        return None

# Fonction pour convertir l'audio t√©l√©charg√© en MP3 et sauvegarder dans le dossier de t√©l√©chargement
def convert_to_mp3(file_name):
    # D√©tecter le syst√®me d'exploitation et d√©finir le chemin du dossier de t√©l√©chargement par d√©faut
    if platform.system() == "Windows":
        downloads_folder = os.path.join(os.environ['USERPROFILE'], 'Downloads')
    elif platform.system() == "Darwin":  # macOS
        downloads_folder = os.path.join(os.environ['HOME'], 'Downloads')
    else:  # Linux
        downloads_folder = os.path.join(os.environ['HOME'], 'T√©l√©chargements')

    # Cr√©er le chemin du fichier de sortie
    output_file = os.path.join(downloads_folder, f"{os.path.splitext(os.path.basename(file_name))[0]}.mp3")
    
    # Ex√©cuter la conversion en MP3
    os.system(f'ffmpeg -i "{file_name}" -vn -ar 44100 -ac 2 -ab 192k -f mp3 "{output_file}"')
    return output_file

# Bouton de t√©l√©chargement et de conversion
if st.button("T√©l√©charger et convertir en MP3"):
    if url:
        st.info("üì• T√©l√©chargement en cours...")
        file_name = download_youtube_audio(url)
        if file_name:
            st.info("üé∂ Conversion en MP3 en cours...")
            mp3_file = convert_to_mp3(file_name)
            st.success(f"‚úÖ T√©l√©chargement et conversion termin√©s ! Le fichier MP3 a √©t√© sauvegard√© dans le dossier de t√©l√©chargements.")
            # Affichage du bouton de t√©l√©chargement
            st.download_button("‚¨áÔ∏è T√©l√©charger le MP3", mp3_file, file_name=mp3_file.split('/')[-1])
    else:
        st.warning("‚ö†Ô∏è Veuillez entrer une URL valide.")
